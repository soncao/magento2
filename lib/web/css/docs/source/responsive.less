// /**
//  * Copyright Â© 2015 Magento. All rights reserved.
//  * See COPYING.txt for license details.
//  */

//  # Responsive
//  Magento UI library provides a strong approach for working with media queries. It`s based on recursive call of <nobr><code>.responsive-max-m()</code></nobr> and <code>.responsive-min-l()</code> mixins defined anywhere in project but invoked in one place in <nobr><code>lib/web/css/source/lib/responsive.less</code></nobr>. That's why in the resulting styles.css we have every media query only ones and all the rules there, not a multiple calls for the same query.
//
//
//  To see the media queries work resize window to understand which breakpoint is applied.
//  ```
//  <div class="example-responsive-block">
//      are applied.
//  </div>
//  ```

.example-responsive-block {
    padding: 10px;
}
.responsive-max-m(@break) when (@break = @screen-m) {
    .example-responsive-block {
        background: #ffc;
    }
    .example-responsive-block:before {
        content: 'Mobile styles ';
        font-weight: bold;
    }
}
.responsive-min-l(@break) when (@break = @screen-m) {
    .example-responsive-block {
        background: #ccf;
    }
    .example-responsive-block:before {
        content: 'Desktop styles ';
        font-weight: bold;
    }
}


//  # Responsive mixins usage
//
//  For gathering media queries you can use responsive mixin collectors
//
//  ## Common
//  For common styles every time you want to add some styles you should write:
//  ```css
//  .responsive-common() {
//      your styles
//  }
//  ```
//  It will be complied to:
//  ```css
//      your styles
//  ```
//  ## Mobile
//  Every time you want to add some mobile media queries you can use one of:
//  ```css
//  .responsive-max-m(@break) {}
//  .responsive-min-m(@break) {}
//  ```
//  As example
//  ```css
//  .responsive-max-m(@break) when (@break = @screen-s) {
//      your styles
//  }
//  ```
//  It will be complied to
//  ```css
//  @media only screen and (max-width: 640px) {
//      your styles
//  }
//  ```
//  ## Desktop
//  Every time you want to add some mobile media queries you can use:
//
//  ```css
//  .responsive-min-l(@break)) {}
//  ```
//  As example
//  ```css
//  .responsive-min-l(@break) when (@break = @screen-m) {
//      your styles
//  }
//  ```
//  will be compiled to
//  ```css
//  @media only screen and (min-width: 768px) {
//      your styles
//  }
//  ```
//  ## Gathering
//  Everything that you include in collector mixins above will go in place where they declarated.
//  As example all
//  ```css
//  .responsive-min-l(@break)) {
//      your code
//  }
//  ```
//  Will go to
//  ```css
//  .responsive-min-l(@break));
//  ```
//  By default you can find it responsive.less file in lib
//
//  &nbsp;

//  # Responsive breakpoints
//  In Magento UI library there are predefined variables for breakpoints.
//  ```css
//  @screen-xxs: 320px;
//  @screen-xs: 400px;
//  @screen-s: 640px;
//  @screen-m: 768px;
//  @screen-l: 1000px;
//  @screen-xl: 1440px;
//  ```
//  &nbsp;
